{"google":"UA-20357800-1","tagline":"A command-line client for the Pivotal Tracker API","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# Rupt\r\n\r\n**Note** this is a prototype project to play around with creating a nice\r\ncommand-line interface. It works, but is still a little rough around the edges.\r\n\r\nRupt is a command-line interface for [Pivotal Tracker][1]. It allows\r\ndevelopers to review stories, add comments and tasks, and update story progress\r\nright from the command line.\r\n\r\nHere's a quick example:\r\n\r\n    # List all stories for the current iteration\r\n    $ rupt current\r\n    Feature 123456 3  Unstarted   As a user I want to publis blog posts\r\n    # Mark the story as In progress\r\n    $ rupt start 123456\r\n    # Add a comment\r\n    $ rupt comment 123456 --add \"Great feature. Will be finished today.\"\r\n    # Review open tasks for the story\r\n    $ rupt tasks 123456\r\n    - 34890 Add a the post model\r\n    - 34891 Ask John for the design\r\n    - 34892 Integrate with current feed\r\n    # Mark the first task as done\r\n    $ rupt tasks 12346 --check 34890\r\n\r\n[1]: http://www.pivotaltracker.com\r\n\r\n## Installation\r\n\r\nRupt is released as a Ruby Gem. Ruby and Rubygems should come pre-installed on\r\nmost non-Windows systems. Install it like so:\r\n\r\n    $ gem install rupt\r\n\r\nYou can validate the installation process by running `rupt --version`. You should\r\nsee something like `rupt 0.0.1`.\r\n\r\n## Usage\r\n\r\n### Global options\r\n\r\nScope operations to a project:\r\n\r\n    $ rupt --project 12345\r\n\r\nScope operations to use a specific API token:\r\n\r\n    $ rupt --token 1a2b3c4e5f6g\r\n\r\n### Authentication\r\n\r\nLog in to Pivotal Tracker once to retrieve your API key:\r\n\r\n    $ rupt auth\r\n    Email:\r\n    Password:\r\n\r\nThis will store your personal token in ~/.rupt. You can override which token\r\nto use using the `--token` global option. Then, pick a project for your current\r\nproject:\r\n\r\n    $ rupt project -i\r\n\r\nThis will let you pick one of your projects from Pivotal Tracker and store its\r\nID in ./.rupt. You can override which project to use with the global\r\n`--project` option.\r\n\r\n### Listing backlog items\r\n\r\nList all user stories in current iteration:\r\n\r\n    $ rupt current\r\n    Feature 123456 3 Started    As a user I want to write a post (John)\r\n    Choe    654321 8 Deliverded As as user I want to comment on a post (Frank)\r\n\r\nList all bugs in the backlog owned by John:\r\n\r\n    $ rupt backlog --owner John --type bug\r\n\r\n### Working with items\r\n\r\nRe-assign item:\r\n\r\n    $ rupt assign 123456 --to GK\r\n\r\nChange item status:\r\n\r\n    $ rupt [deliver|finish|accept|reject|start] 12345\r\n\r\nShow a complete user story:\r\n\r\n    $ rupt show 123456\r\n    Title:        As a user I want to publish a blog post\r\n    Decription:   Fully description goes here\r\n    Owner:        Arjan van der Gaag (AG)\r\n    Requested by: Mieke Verhagen (MV)\r\n    Estimate:     3\r\n    Type:         story\r\n\r\n### Working with comments and tasks\r\n\r\nComment on an item:\r\n\r\n    $ rupt comment 123456 -m \"This is my new comment\"\r\n\r\nShow the latest comments in chronological order:\r\n\r\n    $ rupt comments 123456\r\n\r\n    MV 2012-03-12 12:34 Dit is een eerste reactie\r\n    MV 2012-03-12 12:34 Dit is een tweede reactie\r\n\r\nShow a story's tasks:\r\n\r\n    $ rupt tasks 123456\r\n    1 [done] Create a model\r\n    2 [done] Write some tests\r\n    3        Publish to staging\r\n\r\nMark a task as finished or unfinished:\r\n\r\n    $ rupt tasks 123456 --[un]check 1\r\n\r\n### Extra \r\n\r\nCreate a new feature branch for a story based on its type, name and ID:\r\n\r\n    $ rupt branch 123456\r\n\r\nOpen a story in the browser client:\r\n\r\n    $ rupt open 123456\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","name":"Rupt"}